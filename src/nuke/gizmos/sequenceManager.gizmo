#! /software/nuke/6.3v5/linux.centos5.x86_64/Nuke6.3 -nx
version 6.3 v5
Group {
 name SequenceManager_dev
 inputs 2
 tile_color 0x577f9bff
 addUserKnob {20 renderGlobals l "Render Globals"}
 addUserKnob {26 ""}
 addUserKnob {4 shotList l "Shot List" t "List of all Sequence Manager shots." M {n/a}}
 addUserKnob {26 actualCamera l Camera: -STARTLINE T n/a}
 addUserKnob {6 overrideCamera l "Use Camera Input" +STARTLINE}
 addUserKnob {4 overrideScene l Scene M {"Shot Manager" "Obj Override" "Merge both" ""}}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {20 grpShader l "Scanline Render" n 1}
 grpShader 0
 addUserKnob {22 showScanlineRender l "Show ScanlineRender" T "nuke.thisNode().begin()\nnuke.show(nuke.toNode('ScanlineRender'))\nnuke.thisNode().end()" +STARTLINE}
 addUserKnob {41 transparency T ScanlineRender.transparency}
 addUserKnob {41 ztest_enabled_1 l Z-buffer -STARTLINE T ScanlineRender.ztest_enabled}
 addUserKnob {41 raycasting -STARTLINE T ScanlineRender.raycasting}
 addUserKnob {41 filter T ScanlineRender.filter}
 addUserKnob {41 antialiasing T ScanlineRender.antialiasing}
 addUserKnob {41 zblend_mode l "Z-blend mode" T ScanlineRender.zblend_mode}
 addUserKnob {41 zblend_range l "Z-blend range" T ScanlineRender.zblend_range}
 addUserKnob {41 projection_mode l "projection mode" T ScanlineRender.projection_mode}
 addUserKnob {41 max_tessellation l "tessellation max" T ScanlineRender.max_tessellation}
 addUserKnob {41 overscan_1 l overscan T ScanlineRender.overscan}
 addUserKnob {41 ambient T ScanlineRender.ambient}
 addUserKnob {26 ""}
 addUserKnob {41 samples T ScanlineRender.samples}
 addUserKnob {41 shutter T ScanlineRender.shutter}
 addUserKnob {26 shader l Shader}
 addUserKnob {41 output_motion_vectors_type l "motion vectors" T ScanlineRender.output_motion_vectors_type}
 addUserKnob {41 output_motion_vectors l "motion vectors" +INVISIBLE T ScanlineRender.output_motion_vectors}
 addUserKnob {41 MB_channel l motion T ScanlineRender.MB_channel}
 addUserKnob {41 output_shader_vectors l "output vectors" T ScanlineRender.output_shader_vectors}
 addUserKnob {41 P_channel l "surf point" T ScanlineRender.P_channel}
 addUserKnob {41 N_channel l normal T ScanlineRender.N_channel}
 addUserKnob {26 displacement l Displacement}
 addUserKnob {41 displacement_max_tessellation l "max subdivision" T ScanlineRender.displacement_max_tessellation}
 addUserKnob {41 displacement_mode l mode T ScanlineRender.displacement_mode}
 addUserKnob {41 displacement_edge_length l "pixel edge length" T ScanlineRender.displacement_edge_length}
 addUserKnob {41 displacement_edge_threshold l "edge threshold" T ScanlineRender.displacement_edge_threshold}
 addUserKnob {41 displacement_normal_threshold l "normal threshold" T ScanlineRender.displacement_normal_threshold}
 addUserKnob {41 displacement_displace_threshold l "displace threshold" T ScanlineRender.displacement_displace_threshold}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 grpRender l Write/Render n 1}
 grpRender 0
 addUserKnob {6 disableWrite l "Disable Write" +STARTLINE}
 addUserKnob {22 showWrite l "Show Write" t "Show the property panel of the WriteShot node." -STARTLINE T "nuke.thisNode().begin()\nnuke.show(nuke.toNode('WriteShot'))\nnuke.thisNode().end()"}
 addUserKnob {41 format T OutputResolution.format}
 addUserKnob {41 overscan T ScanlineRender.overscan}
 addUserKnob {41 channels T WriteShot.channels}
 addUserKnob {41 file T WriteShot.file}
 addUserKnob {41 colorspace T WriteShot.colorspace}
 addUserKnob {41 file_type l "file type" T WriteShot.file_type}
 addUserKnob {41 Render T WriteShot.Render}
 addUserKnob {22 alfredRender l "Alfred Render" t "Lunch the render on the farm." -STARTLINE T "import mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().alfredRender()"}
 addUserKnob {22 playRender l "play render" T "import mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().framecyclerRender()" +STARTLINE}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 hubRenderGRP l hubRender n 1}
 hubRenderGRP 0
 addUserKnob {6 usehubWrite l "Use hubWrite" +STARTLINE}
 addUserKnob {6 useRenderGlobals l "Use Render Globals" -STARTLINE}
 addUserKnob {22 hubRenderAll l "hubRender All" T "print 'render all shots'" +STARTLINE}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 version -STARTLINE T v1.0}
 addUserKnob {22 helpButton l "Intranet Help" -STARTLINE T "nuke.message('coming soon...')"}
 addUserKnob {20 shotTab l "Shot Manager"}
 addUserKnob {22 refresh l Refresh t "refresh job and shot list" -STARTLINE T "import mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().refresh()"}
 addUserKnob {22 clearShots l Clear t "Clear all information in the Sequence manager." -STARTLINE T "import mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().clearSequenceManager()\n"}
 addUserKnob {26 ""}
 addUserKnob {26 jobname l Job: T n/a}
 addUserKnob {4 sceneList l Scenes M {n/a}}
 addUserKnob {4 shotlist l Shots t "List of all available shot in this sequence." M {n/a}}
 addUserKnob {22 addShot l "add shot" t "add selected shot to the manager" T "node = nuke.thisNode()\nscene = node.knob('sceneList').value()\nshot = node.knob('shotlist').value()\nimport mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().createShot(scene, shot)" +STARTLINE}
 addUserKnob {6 createCamera l "create hubCamera" -STARTLINE}
 createCamera true
 addUserKnob {26 ""}
 addUserKnob {22 delFromList l INVISIBLE t "delete selected shot from the Sequence Manager." -STARTLINE +INVISIBLE T "node = nuke.thisNode()\nshot = node.knob('shotList').value()\nimport mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().removeShot(shot)"}
 addUserKnob {22 delAllshots l "delete all" t "delete all shot from the Sequence Manager." T "shots = nuke.thisNode().knob('shotList').values()\nimport mpc.nuke.dmpTools.nodes.nukeSequenceManager as nukeSequenceManager\nnukeSequenceManager.NukeSequenceManager().removeAllShots(shots)\n" +STARTLINE}
 addUserKnob {26 ""}
}
 Input {
  inputs 0
  name camera
  xpos 1202
  ypos -509
 }
 Switch {
  inputs 0
  name cameraSwitch
  xpos 1377
  ypos 28
 }
 Switch {
  inputs 2
  which {{"\[python nuke.thisGroup().knob('overrideCamera').getValue()]"}}
  name cameraOverride
  xpos 1202
  ypos 28
 }
 Scene {
  inputs 0
  name scene
  xpos 908
  ypos -298
 }
set Nd417a6b0 [stack 0]
 Input {
  inputs 0
  name obj
  xpos 423
  ypos -509
  number 1
 }
 Scene {
  name sceneOverride
  xpos 433
  ypos -298
 }
set Nd4183e40 [stack 0]
 Scene {
  inputs 2
  name sceneMerge
  xpos 667
  ypos -298
 }
push $Nd4183e40
push $Nd417a6b0
 Switch {
  inputs 3
  which {{"\[python nuke.thisGroup().knob('overrideScene').getValue()]" i}}
  name switchScene
  xpos 657
  ypos -109
 }
 Constant {
  inputs 0
  channels rgb
  format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
  name OutputResolution
  xpos 458
  ypos 5
 }
 ScanlineRender {
  inputs 3
  shutter 0
  output_motion_vectors_type off
  MB_channel motion
  name ScanlineRender
  selected true
  xpos 657
  ypos 28
 }
 Write {
  channels rgba
  file_type exr
  version 7
  name WriteShot
  xpos 657
  ypos 166
  disable {{"\[python nuke.thisGroup().knob(\"disableWrite\").getValue()]" i}}
 }
 Output {
  name Output
  xpos 657
  ypos 441
 }
end_group
